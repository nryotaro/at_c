cmake_minimum_required (VERSION 3.12.1)

project (AtC)
set(CMAKE_CXX_FLAGS "-std=c++14 -Wall")

# Download and unpack googletest at configure time
# https://cmake.org/cmake/help/latest/command/configure_file.html
configure_file(libs/Googletest.txt.in googletest/CMakeLists.txt)
execute_process(COMMAND ${CMAKE_COMMAND} -G "${CMAKE_GENERATOR}" .
  RESULT_VARIABLE result
  WORKING_DIRECTORY ${CMAKE_BINARY_DIR}/googletest)
if(result)
  message(FATAL_ERROR "CMake step for googletest failed: ${result}")
endif()
execute_process(COMMAND ${CMAKE_COMMAND} --build .
  RESULT_VARIABLE result
  WORKING_DIRECTORY ${CMAKE_BINARY_DIR}/googletest)
if(result)
  message(FATAL_ERROR "Build step for googletest failed: ${result}")
endif()

configure_file(libs/Boost.txt.in boost/CMakeLists.txt)
execute_process(COMMAND ${CMAKE_COMMAND} -G "${CMAKE_GENERATOR}" .
  RESULT_VARIABLE result
  WORKING_DIRECTORY ${CMAKE_BINARY_DIR}/boost)
if(result)
  message(FATAL_ERROR "CMake step for boost failed: ${result}")
endif() 
execute_process(COMMAND ${CMAKE_COMMAND} --build .
  RESULT_VARIABLE result
  WORKING_DIRECTORY ${CMAKE_BINARY_DIR}/boost)
if(result)
  message(FATAL_ERROR "Build step for boost failed: ${result}")
endif()

# Add googletest directly to our build. This defines
# the gtest and gtest_main targets.
add_subdirectory(${CMAKE_BINARY_DIR}/googletest/base/src/googletest
                 EXCLUDE_FROM_ALL)

include_directories(${CMAKE_BINARY_DIR}/boost/base/src/boost)

enable_testing()
add_subdirectory(src/abc119)
add_subdirectory(tests/abc119)
add_subdirectory(src/abc120)
add_subdirectory(tests/abc120)
add_subdirectory(src/abc121)
add_subdirectory(tests/abc121)
add_subdirectory(src/abc122)
add_subdirectory(tests/abc122)
add_subdirectory(src/abc123)
add_subdirectory(tests/abc123)
add_subdirectory(src/abc124)
add_subdirectory(tests/abc124)
add_subdirectory(src/abc125)
add_subdirectory(tests/abc125)
add_subdirectory(src/abc126)
add_subdirectory(tests/abc126)
add_subdirectory(src/abc127)
add_subdirectory(tests/abc127)
add_subdirectory(src/abc128)
add_subdirectory(tests/abc128)
add_subdirectory(src/abc129)
# add_subdirectory(tests/abc129)
add_subdirectory(src/abc130)
add_subdirectory(tests/abc130)
add_subdirectory(src/abc131)
add_subdirectory(tests/abc131)
add_subdirectory(src/abc132)
# add_subdirectory(tests/abc132)
add_subdirectory(src/abc133)
add_subdirectory(tests/abc133)
add_subdirectory(src/abc134)
add_subdirectory(tests/abc134)
add_subdirectory(src/abc135)
# add_subdirectory(tests/abc135)
add_subdirectory(src/abc136)
add_subdirectory(tests/abc136)
add_subdirectory(src/abc137)
add_subdirectory(tests/abc137)
add_subdirectory(src/abc138)
add_subdirectory(tests/abc138)
add_subdirectory(src/abc139)
add_subdirectory(tests/abc139)
add_subdirectory(src/abc140)
add_subdirectory(tests/abc140)
add_subdirectory(src/abc141)
add_subdirectory(tests/abc141)
add_subdirectory(src/abc142)
add_subdirectory(tests/abc142)
add_subdirectory(src/abc143)
add_subdirectory(tests/abc143)
add_subdirectory(src/abc144)
add_subdirectory(tests/abc144)
add_subdirectory(src/abc145)
add_subdirectory(tests/abc145)
add_subdirectory(src/abc146)
add_subdirectory(tests/abc146)
add_subdirectory(src/abc147)
add_subdirectory(tests/abc147)
add_subdirectory(src/abc148)
add_subdirectory(tests/abc148)
add_subdirectory(src/abc149)
add_subdirectory(tests/abc149)
