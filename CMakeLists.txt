cmake_minimum_required (VERSION 3.13.4)

project (AtC)
set(CMAKE_CXX_FLAGS "-std=c++14 -Wall")

# Download and unpack googletest at configure time
# https://cmake.org/cmake/help/latest/command/configure_file.html 
configure_file(libs/Googletest.txt.in googletest/CMakeLists.txt)
execute_process(COMMAND ${CMAKE_COMMAND} -G "${CMAKE_GENERATOR}" .
  RESULT_VARIABLE result
  WORKING_DIRECTORY ${CMAKE_BINARY_DIR}/googletest)
if(result)
  message(FATAL_ERROR "CMake step for googletest failed: ${result}")
endif()
execute_process(COMMAND ${CMAKE_COMMAND} --build .
  RESULT_VARIABLE result
  WORKING_DIRECTORY ${CMAKE_BINARY_DIR}/googletest)
if(result)
  message(FATAL_ERROR "Build step for googletest failed: ${result}")
endif()

configure_file(libs/Boost.txt.in boost/CMakeLists.txt)
execute_process(COMMAND ${CMAKE_COMMAND} -G "${CMAKE_GENERATOR}" .
  RESULT_VARIABLE result
  WORKING_DIRECTORY ${CMAKE_BINARY_DIR}/boost)
if(result)
  message(FATAL_ERROR "CMake step for boost failed: ${result}")
endif() 
execute_process(COMMAND ${CMAKE_COMMAND} --build .
  RESULT_VARIABLE result
  WORKING_DIRECTORY ${CMAKE_BINARY_DIR}/boost)
if(result)
  message(FATAL_ERROR "Build step for boost failed: ${result}")
endif()

# Add googletest directly to our build. This defines
# the gtest and gtest_main targets.
add_subdirectory(${CMAKE_BINARY_DIR}/googletest/base/src/googletest
                 EXCLUDE_FROM_ALL)

include_directories(${CMAKE_BINARY_DIR}/boost/base/src/boost)

enable_testing()
add_subdirectory(src/abc103)
add_subdirectory(tests/abc103)
add_subdirectory(src/abc104)
add_subdirectory(tests/abc104)
add_subdirectory(src/abc105)
add_subdirectory(tests/abc105)
add_subdirectory(src/abc106)
add_subdirectory(tests/abc106)
add_subdirectory(src/abc107)
add_subdirectory(tests/abc107)
add_subdirectory(src/abc108)
add_subdirectory(tests/abc108)
add_subdirectory(src/abc109)
add_subdirectory(tests/abc109)
add_subdirectory(src/abc110)
add_subdirectory(tests/abc110)
add_subdirectory(src/abc111)
add_subdirectory(tests/abc111)
add_subdirectory(src/abc112)
add_subdirectory(tests/abc112)
add_subdirectory(src/abc113)
add_subdirectory(tests/abc113)
add_subdirectory(src/abc114)
add_subdirectory(tests/abc114)
add_subdirectory(src/abc115)
add_subdirectory(tests/abc115)
add_subdirectory(src/abc116)
add_subdirectory(tests/abc116)
# add_subdirectory(src/abc117)
# add_subdirectory(tests/abc117)
add_subdirectory(src/abc118)
add_subdirectory(tests/abc118)
add_subdirectory(src/abc119)
add_subdirectory(tests/abc119)
add_subdirectory(src/abc120)
add_subdirectory(tests/abc120)
add_subdirectory(src/abc121)
add_subdirectory(tests/abc121)
add_subdirectory(src/abc122)
add_subdirectory(tests/abc122)
add_subdirectory(src/abc123)
add_subdirectory(tests/abc123)
add_subdirectory(src/abc124)
add_subdirectory(tests/abc124)
add_subdirectory(src/abc125)
add_subdirectory(tests/abc125)
add_subdirectory(src/abc126)
add_subdirectory(tests/abc126)
add_subdirectory(src/abc127)
add_subdirectory(tests/abc127)
add_subdirectory(src/abc128)
add_subdirectory(tests/abc128)
add_subdirectory(src/abc129)
# add_subdirectory(tests/abc129)
add_subdirectory(src/abc130)
add_subdirectory(tests/abc130)
add_subdirectory(src/abc131)
add_subdirectory(tests/abc131)
#add_subdirectory(src/abc132)
# add_subdirectory(tests/abc132)
add_subdirectory(src/abc133)
add_subdirectory(tests/abc133)
add_subdirectory(src/abc134)
add_subdirectory(tests/abc134)
add_subdirectory(src/abc135)
# add_subdirectory(tests/abc135)
add_subdirectory(src/abc136)
add_subdirectory(tests/abc136)
add_subdirectory(src/abc137)
add_subdirectory(tests/abc137)
add_subdirectory(src/abc138)
add_subdirectory(tests/abc138)
add_subdirectory(src/abc139)
add_subdirectory(tests/abc139)
add_subdirectory(src/abc140)
add_subdirectory(tests/abc140)
add_subdirectory(src/abc141)
add_subdirectory(tests/abc141)
add_subdirectory(src/abc142)
add_subdirectory(tests/abc142)
add_subdirectory(src/abc143)
add_subdirectory(tests/abc143)
add_subdirectory(src/abc144)
add_subdirectory(tests/abc144)
add_subdirectory(src/abc145)
add_subdirectory(tests/abc145)
add_subdirectory(src/abc146)
add_subdirectory(tests/abc146)
add_subdirectory(src/abc147)
add_subdirectory(tests/abc147)
add_subdirectory(src/abc148)
add_subdirectory(tests/abc148)
add_subdirectory(src/abc149)
add_subdirectory(tests/abc149)
add_subdirectory(src/abc150)
add_subdirectory(tests/abc150)
add_subdirectory(src/abc151)
add_subdirectory(tests/abc151)
add_subdirectory(src/abc152)
add_subdirectory(tests/abc152)
add_subdirectory(src/abc153)
add_subdirectory(tests/abc153)
add_subdirectory(src/abc154)
add_subdirectory(tests/abc154)
# add_subdirectory(src/abc155)
# add_subdirectory(tests/abc155)
add_subdirectory(src/abc156)
add_subdirectory(tests/abc156)
add_subdirectory(src/abc157)
add_subdirectory(tests/abc157)
add_subdirectory(src/abc158)
add_subdirectory(tests/abc158)
add_subdirectory(src/abc159)
add_subdirectory(tests/abc159)
add_subdirectory(src/abc160)
add_subdirectory(tests/abc160)
add_subdirectory(src/abc161)
add_subdirectory(tests/abc161)
add_subdirectory(src/abc162)
add_subdirectory(tests/abc162)
add_subdirectory(src/abc163)
add_subdirectory(tests/abc163)
#add_subdirectory(src/abc164)
#add_subdirectory(tests/abc164)
add_subdirectory(src/abc165)
add_subdirectory(tests/abc165)
#add_subdirectory(src/abc166)
#add_subdirectory(tests/abc166)
#add_subdirectory(src/abc167)
#add_subdirectory(tests/abc167)
#add_subdirectory(src/abc168)
#add_subdirectory(tests/abc168)
add_subdirectory(src/abc169)
add_subdirectory(tests/abc169)
add_subdirectory(src/abc170)
add_subdirectory(tests/abc170)
#  https://www.dropbox.com/sh/arnpe0ef5wds8cv/AAAk_SECQ2Nc6SVGii3rHX6Fa?dl=0
